<head>
  <title>Transparent</title>
  <%= csrf_meta_tags %>

  <meta charset="utf-8">
  <title>Transparent</title>
  <meta name="description" content="Transparent">
  <meta name="keywords" content="Transparent">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="mobile-web-app-capable" content="yes">
  <meta property="og:title" content="Transparent">
  <meta property="og:site_name" content="Transparent">
  <meta property="og:description" content="Transparent">
  <meta property="og:url" content="">
  <meta property="og:image" content="./assets/img/config/og.png">
  <meta property="og:type" content="website">
  <link rel="shortcut icon" href="http://res.cloudinary.com/negic/image/upload/v1520401272/favicon.ico" type="image/x-icon">
  <link rel="canonical" href="">
  <!-- <link rel="stylesheet" href="./assets/css/app.css"> -->

  <%= stylesheet_link_tag    'front', media: 'all', 'data-turbolinks-track': 'reload' %>

  <style rel="stylesheet">

          /* ここからiPad proのサイズ */

          /* 背景画像 */
          .transparent-container .bg {
              background-image: url('http://res.cloudinary.com/negic/image/upload/v1519806520/bg01.jpg');
          }

          /* コメントボックスの背景色、文字色、フォントサイズ */
          .transparent-container .post .comment {
              background-color: rgba(234, 83, 80, 0.9);
              color: #fff;
              font-size: 16px;
              width: 333px;
              padding: 40px;
          }

          /* ユーザアイコンの背景色 */
          .transparent-container .post .comment .comment-user-icon {
              background-color: rgba(0, 61, 193, 0.3);
          }

          /* ここからパソコンサイズ */
          @media only screen and (min-width: 1280px) {

              /* コメントボックスの背景色、文字色、フォントサイズ */
              .transparent-container .post .comment {
                  width: 250px;
                  padding: 30px;
                  font-size: 12px;
              }
          }
  </style>

</head>

<body class="page-top">

  <div id="wrapper">
    <div class="transparent-container">
      <div class="bg"></div>
      <!-- <button class="btn-bg-toggle">Switch</button> -->
      <!-- <button id="add" class="btn-add">Stream</button> -->
      <div class="modal-layer">
        <div class="modal-back"></div>
        <div class="modal-inner"></div>
        <button class="btn-close01"></button>
      </div>
    </div>
  </div>

  <script>
    var transcripts_add;

    var MEDIA_MAX_SIZE = 350; // ランダム配置される画像の最大サイズ
    var MEDIA_MIN_SIZE = MEDIA_MAX_SIZE / 2; // ランダム配置される画像の最小サイズ
  </script>

  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
  var initial_transcripts = [];
  var index;

  function fetchTranscripts(initial_transcripts, index){
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "/api/transcripts/" + <%= @wall_id %>, false);
    xmlHttp.send();
    data = JSON.parse(xmlHttp.response)
    for(var i = 0; i < data.transcripts.length; i++) {
        initial_transcripts.push(data.transcripts[i]);
    }
    index = data.index
    console.log(index)
    return initial_transcripts, index
  }

  initial_transcripts, index = fetchTranscripts(initial_transcripts, index);

  function loadTranscripts(initial_transcripts, index){
    console.log(index);
    // const axiosBase = require('axios');
    var instance = axios.create({
      baseURL: '/api',
      headers: {
        'ContentType': 'application/json'
        // 'origin' : 'https://transparent-sxsw-dev.herokuapp.com'
      },
      responseType: 'json'
    });
    console.log('send req with index : ' + index);
    instance.get('/transcripts/' + <%= @wall_id %> + '/' + index).then(function (response){
      console.log(response.data);
      transcripts = response.data.transcripts
      index += transcripts.length;

      for(var i = 0; i < transcripts.length; i++) {
          initial_transcripts.unshift(transcripts[i]);
          transcripts_add([transcripts[i]]);
      }
    }, function (error) {
      console.log(error);
    }).then(function (response){
      loadTranscripts(initial_transcripts, index);
    });
  }
  window.addEventListener('load', loadTranscripts(initial_transcripts, index))
  // document.getElementById('add').addEventListener('click', function() {
  //     loadTranscripts(initial_transcripts, index);
  // }, false);
  </script>
  <%= javascript_include_tag 'front-manifest', 'data-turbolinks-track': 'reload'  %>

</body>
