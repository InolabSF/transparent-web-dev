    <div id="wrapper">
      <div class="transparent-container">
        <div class="bg"></div>
        <button class="btn-bg-toggle">Switch</button>
        <button id="add" class="btn-add">Stream</button>
        <div class="modal-layer">
          <div class="modal-back"></div>
          <div class="modal-inner"></div>
          <button class="btn-close01"></button>
        </div>
      </div>
    </div>

    <script>
      var transcripts_add;
    </script>


    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
    var initial_transcripts = [];
    var index;

    function fetchTranscripts(initial_transcripts, index){
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.open("GET", "/api/transcripts/" + <%= @wall_id %>, false);
      xmlHttp.send();
      data = JSON.parse(xmlHttp.response)
      for(var i = 0; i < data.transcripts.length; i++) {
          initial_transcripts.push(data.transcripts[i]);
      }
      index = data.index
      console.log(index)
      return initial_transcripts, index
    }

    initial_transcripts, index = fetchTranscripts(initial_transcripts, index);

    var total_transcripts = [];
    total_transcripts = initial_transcripts

    function loadTranscripts(total_transcripts, index){
      console.log('start');
      console.log(index);

      // const axiosBase = require('axios');
      var instance = axios.create({
        baseURL: '/api',
        headers: {
          'ContentType': 'application/json'
          // 'origin' : 'https://transparent-sxsw-dev.herokuapp.com'
        },
        responseType: 'json'
      });

      instance.get('/transcripts/' + <%= @wall_id %> + '/' + index).then(function (response){
      // instance.get('/transcripts/' + <%= @wall_id %> + '/' + String(index)).then(function (response){
      // instance.get('/transcripts/' + <%= @wall_id %> + '/51').then(function (response){
        console.log(response.data);

        for(var i = 0; i < response.data.transcripts.length; i++) {
            if(i == 0){
              transcripts_add([response.data.transcripts[i]]);
              total_transcripts.unshift(response.data.transcripts[i])
              index += 1;
            } else {
                if(response.data.transcripts[i].text != total_transcripts[0].text){
                  transcripts_add([response.data.transcripts[i]]);
                  total_transcripts.unshift(response.data.transcripts[i])
                  index += 1;
                }
            }
        }
      }, function (error) {
        console.log(error);
      }).then(function (response){
        loadTranscripts(total_transcripts, index);
      });
    }
    // window.addEventListener('load', loadTranscripts(index))
    document.getElementById('add').addEventListener('click', function() {
        loadTranscripts(total_transcripts, index);
    }, false);

    </script>


    <%= javascript_include_tag 'front-manifest', 'data-turbolinks-track': 'reload'  %>



    <!-- <script>
      temp_transcripts = [initial_transcripts[0],initial_transcripts[1]];
      document.getElementById('add').addEventListener('click', function() {
          transcripts_add(temp_transcripts);
      }, false);
    </script> -->
