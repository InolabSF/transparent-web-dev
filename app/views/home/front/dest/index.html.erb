<style rel="stylesheet">
  /* 背景画像 */
  .transparent-container .bg {
      /* background-image: url('http://res.cloudinary.com/negic/image/upload/v1519806520/bg01.jpg'); */
      background-image: url('https://res.cloudinary.com/dkzchvgct/image/upload/v1520365053/BG02.png');
  }

  /* コメントボックスの背景色 */
  .transparent-container .post .comment {
      background-color: rgba(234, 83, 80, 0.9);
  }

  /* ユーザアイコンの背景色 */
  .transparent-container .post .comment .comment-user-icon {
      background-color: rgba(0, 61, 193, 0.3);
  }
</style>
<div id="wrapper">
  <div class="transparent-container">
    <div class="bg"></div>
    <!-- <button class="btn-bg-toggle">Switch</button> -->
    <!-- <button id="add" class="btn-add">Stream</button> -->
    <div class="modal-layer">
      <div class="modal-back"></div>
      <div class="modal-inner"></div>
      <button class="btn-close01"></button>
    </div>
  </div>
</div>

<script>
  var transcripts_add;

  var MEDIA_MAX_SIZE = 350; // ランダム配置される画像の最大サイズ
  var MEDIA_MIN_SIZE = MEDIA_MAX_SIZE / 3; // ランダム配置される画像の最小サイズ
</script>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
var initial_transcripts = [];
var index;

function fetchTranscripts(initial_transcripts, index){
  var xmlHttp = new XMLHttpRequest();
  xmlHttp.open("GET", "/api/transcripts/" + <%= @wall_id %>, false);
  xmlHttp.send();
  data = JSON.parse(xmlHttp.response)
  for(var i = 0; i < data.transcripts.length; i++) {
      initial_transcripts.push(data.transcripts[i]);
  }
  index = data.index
  console.log(index)
  return initial_transcripts, index
}

initial_transcripts, index = fetchTranscripts(initial_transcripts, index);

function loadTranscripts(initial_transcripts, index){
  console.log(index);
  // const axiosBase = require('axios');
  var instance = axios.create({
    baseURL: '/api',
    headers: {
      'ContentType': 'application/json'
      // 'origin' : 'https://transparent-sxsw-dev.herokuapp.com'
    },
    responseType: 'json'
  });
  console.log('send req with index : ' + index);
  instance.get('/transcripts/' + <%= @wall_id %> + '/' + index).then(function (response){
    console.log(response.data);
    transcripts = response.data.transcripts
    index += transcripts.length;

    for(var i = 0; i < transcripts.length; i++) {
        initial_transcripts.unshift(transcripts[i]);
        transcripts_add([transcripts[i]]);
    }
  }, function (error) {
    console.log(error);
  }).then(function (response){
    loadTranscripts(initial_transcripts, index);
  });
}


window.addEventListener('load', loadTranscripts(initial_transcripts, index))
// document.getElementById('add').addEventListener('click', function() {
//     loadTranscripts(initial_transcripts, index);
// }, false);

</script>

<%= javascript_include_tag 'front-manifest', 'data-turbolinks-track': 'reload'  %>
